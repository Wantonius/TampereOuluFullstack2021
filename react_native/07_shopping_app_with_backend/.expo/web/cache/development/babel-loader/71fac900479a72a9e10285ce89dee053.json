{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport ShoppingList from \"./components/ShoppingList\";\nimport ShoppingForm from \"./components/ShoppingForm\";\nimport LoginPage from \"./components/LoginPage\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState({\n    list: [],\n    isLogged: false,\n    token: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState({\n    url: \"\",\n    request: {},\n    action: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      urlRequest = _useState4[0],\n      setUrlRequest = _useState4[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var url, response, data, list;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"http://to-native-shopping.herokuapp.com\" + url;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url, urlRequest.request));\n\n            case 3:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 21;\n                break;\n              }\n\n              if (urlRequest.action === \"register\") {\n                alert(\"Register success!\");\n              }\n\n              if (!(urlRequest.action === \"login\")) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 9:\n              data = _context.sent;\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  token: data.token,\n                  isLogged: true\n                });\n              });\n              getList(data.token);\n\n            case 12:\n              if (urlRequest.action === \"logout\") {\n                setState({\n                  list: [],\n                  isLogged: false,\n                  token: \"\"\n                });\n              }\n\n              if (!(urlRequest.action === \"getlist\")) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 16:\n              list = _context.sent;\n              setState(function (state) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  list: list\n                });\n              });\n\n            case 18:\n              if (urlRequest.action === \"addtolist\" || urlRequest.action === \"removefromlist\") {\n                getList(state.token);\n              }\n\n              _context.next = 22;\n              break;\n\n            case 21:\n              if (response.status === 403) {\n                if (urlRequest.action !== \"login\") {\n                  setState({\n                    list: [],\n                    isLogged: false,\n                    token: \"\"\n                  });\n                }\n              } else {\n                console.log(\"Server responded with a status:\" + response.status);\n              }\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, [urlRequest]);\n\n  var register = function register(user) {\n    setUrlRequest({\n      url: \"/register\",\n      request: {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      },\n      action: \"register\"\n    });\n  };\n\n  var login = function login(user) {\n    setUrlRequest({\n      url: \"/login\",\n      request: {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      },\n      action: \"login\"\n    });\n  };\n\n  var logout = function logout() {\n    setUrlRequest({\n      url: \"/logout\",\n      request: {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          token: state.token\n        }\n      },\n      action: \"logout\"\n    });\n  };\n\n  var getList = function getList() {\n    setUrlRequest({\n      url: \"/api/shopping\",\n      request: {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          token: state.token\n        }\n      },\n      action: \"getlist\"\n    });\n  };\n\n  var addToList = function addToList(item) {\n    setUrlRequest({\n      url: \"/api/shopping\",\n      request: {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          token: state.token\n        },\n        body: JSON.stringify(item)\n      },\n      action: \"addtolist\"\n    });\n  };\n\n  var removeFromList = function removeFromList(id) {\n    setUrlRequest({\n      url: \"/api/shopping/\" + id,\n      request: {\n        method: \"DELETE\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          token: state.token\n        }\n      },\n      action: \"removefromlist\"\n    });\n  };\n\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, null, state.isLogged ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"ShoppingList\"\n  }, function (props) {\n    return React.createElement(ShoppingList, _extends({}, props, {\n      list: state.list,\n      removeFromList: removeFromList\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Add Item\"\n  }, function (props) {\n    return React.createElement(ShoppingForm, _extends({}, props, {\n      addToList: addToList\n    }));\n  })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Login\"\n  }, function (props) {\n    return React.createElement(LoginPage, _extends({}, props, {\n      login: login,\n      register: register\n    }));\n  }))));\n}","map":{"version":3,"sources":["C:/gits/tampereoulufullstack2021/TampereOuluFullstack2021/react_native/07_shopping_app_with_backend/App.js"],"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","ShoppingList","ShoppingForm","LoginPage","Stack","App","list","isLogged","token","state","setState","url","request","action","urlRequest","setUrlRequest","fetchData","fetch","response","ok","alert","json","data","getList","status","console","log","register","user","method","mode","headers","body","JSON","stringify","login","logout","addToList","item","removeFromList","id","props"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport ShoppingList from './components/ShoppingList';\nimport ShoppingForm from './components/ShoppingForm';\nimport LoginPage from './components/LoginPage';\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n\t\n\tconst [state,setState] = useState({\n\t\tlist:[],\n\t\tisLogged:false,\n\t\ttoken:\"\"\n\t})\n\t\n\tconst [urlRequest,setUrlRequest] = useState({\n\t\turl:\"\",\n\t\trequest:{},\n\t\taction:\"\"\n\t})\n\t\n\tuseEffect(() => {\n\t\t\n\t\tconst fetchData = async () => {\n\t\t\tlet url = \"http://to-native-shopping.herokuapp.com\"+url\n\t\t\tconst response = await fetch(url,urlRequest.request);\n\t\t\tif(response.ok) {\n\t\t\t\tif(urlRequest.action === \"register\") {\n\t\t\t\t\talert(\"Register success!\");\n\t\t\t\t}\n\t\t\t\tif(urlRequest.action === \"login\") {\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tsetState((state) => { \n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\ttoken:data.token,\n\t\t\t\t\t\t\tisLogged:true\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tgetList(data.token)\n\t\t\t\t}\n\t\t\t\tif(urlRequest.action === \"logout\") {\n\t\t\t\t\tsetState({\n\t\t\t\t\t\tlist:[],\n\t\t\t\t\t\tisLogged:false,\n\t\t\t\t\t\ttoken:\"\"\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif(urlRequest.action === \"getlist\") {\n\t\t\t\t\tconst list = await response.json();\n\t\t\t\t\tsetState((state) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tlist:list\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif(urlRequest.action === \"addtolist\" || urlRequest.action === \"removefromlist\") {\n\t\t\t\t\tgetList(state.token);\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif(response.status === 403) {\n\t\t\t\t\tif(urlRequest.action !== \"login\") {\n\t\t\t\t\t\tsetState({\n\t\t\t\t\t\t\tlist:[],\n\t\t\t\t\t\t\tisLogged:false,\n\t\t\t\t\t\t\ttoken:\"\"\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Server responded with a status:\"+response.status);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfetchData();\n\t},[urlRequest])\n\t\n\t//LOGIN API\n\t\n\tconst register = (user) => {\n\t\tsetUrlRequest({\n\t\t\turl:\"/register\",\n\t\t\trequest:{\n\t\t\t\tmethod:\"POST\",\n\t\t\t\tmode:\"cors\",\n\t\t\t\theaders:{\"Content-type\":\"application/json\"},\n\t\t\t\tbody:JSON.stringify(user)\n\t\t\t},\n\t\t\taction:\"register\"\n\t\t})\n\t}\n\n\tconst login = (user) => {\n\t\tsetUrlRequest({\n\t\t\turl:\"/login\",\n\t\t\trequest:{\n\t\t\t\tmethod:\"POST\",\n\t\t\t\tmode:\"cors\",\n\t\t\t\theaders:{\"Content-type\":\"application/json\"},\n\t\t\t\tbody:JSON.stringify(user)\n\t\t\t},\n\t\t\taction:\"login\"\n\t\t})\n\t}\n\n\tconst logout = () => {\n\t\tsetUrlRequest({\n\t\t\turl:\"/logout\",\n\t\t\trequest:{\n\t\t\t\tmethod:\"POST\",\n\t\t\t\tmode:\"cors\",\n\t\t\t\theaders:{\"Content-type\":\"application/json\",\n\t\t\t\ttoken:state.token}\n\t\t\t},\n\t\t\taction:\"logout\"\n\t\t})\n\t}\n\n\t//SHOPPING API\n\t\n\tconst getList = () => {\n\t\tsetUrlRequest({\n\t\t\turl:\"/api/shopping\",\n\t\t\trequest:{\n\t\t\t\tmethod:\"GET\",\n\t\t\t\tmode:\"cors\",\n\t\t\t\theaders:{\"Content-type\":\"application/json\",\n\t\t\t\ttoken:state.token}\n\t\t\t},\n\t\t\taction:\"getlist\"\n\t\t})\n\t}\n\t\n\tconst addToList = (item) => {\n\t\tsetUrlRequest({\n\t\t\turl:\"/api/shopping\",\n\t\t\trequest:{\n\t\t\t\tmethod:\"POST\",\n\t\t\t\tmode:\"cors\",\n\t\t\t\theaders:{\"Content-type\":\"application/json\",\n\t\t\t\ttoken:state.token},\n\t\t\t\tbody:JSON.stringify(item)\n\t\t\t},\n\t\t\taction:\"addtolist\"\n\t\t})\n\t}\n\n\tconst removeFromList = (id) => {\n\t\tsetUrlRequest({\n\t\t\turl:\"/api/shopping/\"+id,\n\t\t\trequest:{\n\t\t\t\tmethod:\"DELETE\",\n\t\t\t\tmode:\"cors\",\n\t\t\t\theaders:{\"Content-type\":\"application/json\",\n\t\t\t\ttoken:state.token}\n\t\t\t},\n\t\t\taction:\"removefromlist\"\n\t\t})\n\t}\t\n\treturn (\n\t\t<NavigationContainer>\n\t\t\t<Stack.Navigator>\n\t\t\t{state.isLogged ? (\n\t\t\t\t<>\n\t\t\t\t\t<Stack.Screen name=\"ShoppingList\">\n\t\t\t\t\t{props => <ShoppingList {...props} list={state.list} removeFromList={removeFromList}/>}\n\t\t\t\t\t</Stack.Screen>\n\t\t\t\t\t<Stack.Screen name=\"Add Item\">\n\t\t\t\t\t{props => <ShoppingForm {...props} addToList={addToList}/>}\n\t\t\t\t\t</Stack.Screen>\n\t\t\t\t</>\n\t\t\t\t):(\n\t\t\t\t<>\n\t\t\t\t\t<Stack.Screen name=\"Login\">\n\t\t\t\t\t{props => <LoginPage {...props} login={login} register={register}/>}\n\t\t\t\t\t</Stack.Screen>\n\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t\t</Stack.Navigator>\t\t\n\t\t</NavigationContainer>\n\t);\n}\n\n"]},"metadata":{},"sourceType":"module"}