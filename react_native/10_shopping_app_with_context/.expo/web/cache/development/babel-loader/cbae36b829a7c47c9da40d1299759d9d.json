{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useState, useEffect } from 'react';\nimport ActionContext from \"../context/ActionContext\";\nimport useAppState from \"./useAppState\";\nimport * as actionConstants from \"../types/actionConstants\";\n\nvar useAction = function useAction() {\n  var action = useContext(ActionContext);\n\n  var _useState = useState({\n    url: \"\",\n    request: {},\n    action: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useAppState = useAppState(),\n      token = _useAppState.token;\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var url, response, data, list;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (state.url) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              action.dispatch({\n                type: actionConstants.LOADING\n              });\n              url = \"http://to-native-shopping.herokuapp.com\" + state.url;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch(url, state.request));\n\n            case 6:\n              response = _context.sent;\n              action.dispatch({\n                type: actionConstants.STOP_LOADING\n              });\n\n              if (!response.ok) {\n                _context.next = 36;\n                break;\n              }\n\n              _context.t0 = state.action;\n              _context.next = _context.t0 === \"register\" ? 12 : _context.t0 === \"login\" ? 14 : _context.t0 === \"logout\" ? 20 : _context.t0 === \"getlist\" ? 22 : _context.t0 === \"additem\" ? 27 : _context.t0 === \"removeitem\" ? 30 : 33;\n              break;\n\n            case 12:\n              action.dispatch({\n                type: actionConstants.REGISTER_SUCCESS\n              });\n              return _context.abrupt(\"return\");\n\n            case 14:\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 16:\n              data = _context.sent;\n              action.dispatch({\n                type: actionConstants.LOGIN_SUCCESS,\n                token: data.token\n              });\n              getList(data.token);\n              return _context.abrupt(\"return\");\n\n            case 20:\n              action.dispatch({\n                type: actionConstants.LOGOUT_SUCCESS\n              });\n              return _context.abrupt(\"return\");\n\n            case 22:\n              _context.next = 24;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 24:\n              list = _context.sent;\n              action.dispatch({\n                type: actionConstants.FETCH_LIST_SUCCESS,\n                list: list\n              });\n              return _context.abrupt(\"return\");\n\n            case 27:\n              action.dispatch({\n                type: actionConstants.ADD_ITEM_SUCCESS\n              });\n              getList(token);\n              return _context.abrupt(\"return\");\n\n            case 30:\n              action.dispatch({\n                type: actionConstants.REMOVE_ITEM_SUCCESS\n              });\n              getList(token);\n              return _context.abrupt(\"return\");\n\n            case 33:\n              return _context.abrupt(\"return\");\n\n            case 34:\n              _context.next = 67;\n              break;\n\n            case 36:\n              _context.t1 = state.action;\n              _context.next = _context.t1 === \"register\" ? 39 : _context.t1 === \"login\" ? 44 : _context.t1 === \"logout\" ? 46 : _context.t1 === \"getlist\" ? 48 : _context.t1 === \"additem\" ? 54 : _context.t1 === \"removeitem\" ? 60 : 66;\n              break;\n\n            case 39:\n              if (!(response.status === 409)) {\n                _context.next = 42;\n                break;\n              }\n\n              action.dispatch({\n                type: actionConstants.REGISTER_FAILED,\n                error: \"Username already in use\"\n              });\n              return _context.abrupt(\"return\");\n\n            case 42:\n              action.dispatch({\n                type: actionConstants.REGISTER_FAILED,\n                error: \"Server responded with a status:\" + response.status\n              });\n              return _context.abrupt(\"return\");\n\n            case 44:\n              action.dispatch({\n                type: actionConstants.LOGIN_FAILED,\n                error: \"Server responded with a status:\" + response.status\n              });\n              return _context.abrupt(\"return\");\n\n            case 46:\n              action.dispatch({\n                type: actionConstants.LOGOUT_FAILED,\n                error: \"Failed to remove session info. Logging you out!\"\n              });\n              return _context.abrupt(\"return\");\n\n            case 48:\n              if (!(response.status === 403)) {\n                _context.next = 52;\n                break;\n              }\n\n              action.dispatch({\n                type: actionConstants.LOGOUT_SUCCESS\n              });\n              action.dispatch({\n                type: actionConstants.FETCH_LIST_FAILED,\n                error: \"Session has expired. Logging you out!\"\n              });\n              return _context.abrupt(\"return\");\n\n            case 52:\n              action.dispatch({\n                type: actionConstants.FETCH_LIST_FAILED,\n                error: \"Server responded with a status:\" + response.status\n              });\n              return _context.abrupt(\"return\");\n\n            case 54:\n              if (!(response.status === 403)) {\n                _context.next = 58;\n                break;\n              }\n\n              action.dispatch({\n                type: actionConstants.LOGOUT_SUCCESS\n              });\n              action.dispatch({\n                type: actionConstants.ADD_ITEM_FAILED,\n                error: \"Session has expired. Logging you out!\"\n              });\n              return _context.abrupt(\"return\");\n\n            case 58:\n              action.dispatch({\n                type: actionConstants.ADD_ITEM_FAILED,\n                error: \"Server responded with a status:\" + response.status\n              });\n              return _context.abrupt(\"return\");\n\n            case 60:\n              if (!(response.status === 403)) {\n                _context.next = 64;\n                break;\n              }\n\n              action.dispatch({\n                type: actionConstants.LOGOUT_SUCCESS\n              });\n              action.dispatch({\n                type: actionConstants.REMOVE_ITEM_FAILED,\n                error: \"Session has expired. Logging you out!\"\n              });\n              return _context.abrupt(\"return\");\n\n            case 64:\n              action.dispatch({\n                type: actionConstants.REMOVE_ITEM_FAILED,\n                error: \"Server responded with a status:\" + response.status\n              });\n              return _context.abrupt(\"return\");\n\n            case 66:\n              return _context.abrupt(\"return\");\n\n            case 67:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, [state]);\n\n  var register = function register(user) {\n    setState({\n      url: \"/register\",\n      request: {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      },\n      action: \"register\"\n    });\n  };\n\n  var login = function login(user) {\n    setState({\n      url: \"/login\",\n      request: {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      },\n      action: \"login\"\n    });\n  };\n\n  var logout = function logout(token) {\n    setState({\n      url: \"/logout\",\n      request: {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          token: token\n        }\n      },\n      action: \"logout\"\n    });\n  };\n\n  var getList = function getList(token) {\n    setState({\n      url: \"/api/shopping\",\n      request: {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          token: token\n        }\n      },\n      action: \"getlist\"\n    });\n  };\n\n  var addItem = function addItem(token, item) {\n    setState({\n      url: \"/api/shopping\",\n      request: {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          token: token\n        },\n        body: JSON.stringify(item)\n      },\n      action: \"additem\"\n    });\n  };\n\n  var removeItem = function removeItem(token, id) {\n    setState({\n      url: \"/api/shopping/\" + id,\n      request: {\n        method: \"DELETE\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          token: token\n        }\n      },\n      action: \"removeitem\"\n    });\n  };\n\n  return {\n    register: register,\n    login: login,\n    logout: logout,\n    getList: getList,\n    addItem: addItem,\n    removeItem: removeItem\n  };\n};\n\nexport default useAction;","map":{"version":3,"sources":["C:/gits/tampereoulufullstack2021/TampereOuluFullstack2021/react_native/10_shopping_app_with_context/hooks/useAction.js"],"names":["useContext","useState","useEffect","ActionContext","useAppState","actionConstants","useAction","action","url","request","state","setState","token","fetchData","dispatch","type","LOADING","fetch","response","STOP_LOADING","ok","REGISTER_SUCCESS","json","data","LOGIN_SUCCESS","getList","LOGOUT_SUCCESS","list","FETCH_LIST_SUCCESS","ADD_ITEM_SUCCESS","REMOVE_ITEM_SUCCESS","status","REGISTER_FAILED","error","LOGIN_FAILED","LOGOUT_FAILED","FETCH_LIST_FAILED","ADD_ITEM_FAILED","REMOVE_ITEM_FAILED","register","user","method","mode","headers","body","JSON","stringify","login","logout","addItem","item","removeItem","id"],"mappings":"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","sourcesContent":["import {useContext,useState,useEffect} from 'react';\r\nimport ActionContext from '../context/ActionContext';\r\nimport useAppState from './useAppState';\r\nimport * as actionConstants from '../types/actionConstants';\r\n\r\nconst useAction = () => {\r\n\t\r\n\tconst action = useContext(ActionContext);\r\n\tconst [state,setState] = useState({\r\n\t\turl:\"\",\r\n\t\trequest:{},\r\n\t\taction:\"\"\r\n\t})\r\n\t\r\n\tconst {token} = useAppState();\r\n\t\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tconst fetchData = async () => {\r\n\t\t\tif(!state.url) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\taction.dispatch({\r\n\t\t\t\ttype:actionConstants.LOADING\t\t\t\t\r\n\t\t\t})\r\n\t\t\tlet url = \"http://to-native-shopping.herokuapp.com\"+state.url\r\n\t\t\tconst response = await fetch(url,state.request);\r\n\t\t\taction.dispatch({\r\n\t\t\t\ttype:actionConstants.STOP_LOADING\r\n\t\t\t})\r\n\t\t\tif(response.ok) {\r\n\t\t\t\tswitch(state.action) {\r\n\t\t\t\t\tcase \"register\":\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.REGISTER_SUCCESS\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase \"login\":\r\n\t\t\t\t\t\tconst data = await response.json();\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.LOGIN_SUCCESS,\r\n\t\t\t\t\t\t\ttoken:data.token\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tgetList(data.token);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase \"logout\":\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.LOGOUT_SUCCESS\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase \"getlist\":\r\n\t\t\t\t\t\tconst list = await response.json();\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.FETCH_LIST_SUCCESS,\r\n\t\t\t\t\t\t\tlist:list\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase \"additem\":\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.ADD_ITEM_SUCCESS\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tgetList(token);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase \"removeitem\":\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.REMOVE_ITEM_SUCCESS\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tgetList(token);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch(state.action) {\r\n\t\t\t\t\tcase \"register\":\r\n\t\t\t\t\t\tif(response.status === 409) {\r\n\t\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\t\ttype:actionConstants.REGISTER_FAILED,\r\n\t\t\t\t\t\t\t\terror:\"Username already in use\"\r\n\t\t\t\t\t\t\t})\t\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.REGISTER_FAILED,\r\n\t\t\t\t\t\t\terror:\"Server responded with a status:\"+response.status\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase \"login\":\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.LOGIN_FAILED,\r\n\t\t\t\t\t\t\terror:\"Server responded with a status:\"+response.status\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase \"logout\":\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.LOGOUT_FAILED,\r\n\t\t\t\t\t\t\terror:\"Failed to remove session info. Logging you out!\"\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase \"getlist\":\r\n\t\t\t\t\t\tif(response.status === 403) {\r\n\t\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\t\ttype:actionConstants.LOGOUT_SUCCESS\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\t\ttype:actionConstants.FETCH_LIST_FAILED,\r\n\t\t\t\t\t\t\t\terror:\"Session has expired. Logging you out!\"\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.FETCH_LIST_FAILED,\r\n\t\t\t\t\t\t\terror:\"Server responded with a status:\"+response.status\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn;\t\t\t\t\t\t\r\n\t\t\t\t\tcase \"additem\":\r\n\t\t\t\t\t\tif(response.status === 403) {\r\n\t\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\t\ttype:actionConstants.LOGOUT_SUCCESS\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\t\ttype:actionConstants.ADD_ITEM_FAILED,\r\n\t\t\t\t\t\t\t\terror:\"Session has expired. Logging you out!\"\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.ADD_ITEM_FAILED,\r\n\t\t\t\t\t\t\terror:\"Server responded with a status:\"+response.status\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn;\t\r\n\t\t\t\t\tcase \"removeitem\":\r\n\t\t\t\t\t\tif(response.status === 403) {\r\n\t\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\t\ttype:actionConstants.LOGOUT_SUCCESS\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\t\ttype:actionConstants.REMOVE_ITEM_FAILED,\r\n\t\t\t\t\t\t\t\terror:\"Session has expired. Logging you out!\"\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taction.dispatch({\r\n\t\t\t\t\t\t\ttype:actionConstants.REMOVE_ITEM_FAILED,\r\n\t\t\t\t\t\t\terror:\"Server responded with a status:\"+response.status\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn;\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfetchData();\r\n\t\t\r\n\t},[state])\r\n\r\n\tconst register = (user) => {\r\n\t\tsetState({\r\n\t\t\turl:\"/register\",\r\n\t\t\trequest:{\r\n\t\t\t\tmethod:\"POST\",\r\n\t\t\t\tmode:\"cors\",\r\n\t\t\t\theaders:{\"Content-type\":\"application/json\"},\r\n\t\t\t\tbody:JSON.stringify(user)\r\n\t\t\t},\r\n\t\t\taction:\"register\"\r\n\t\t})\r\n\t}\r\n\r\n\tconst login = (user) => {\r\n\t\tsetState({\r\n\t\t\turl:\"/login\",\r\n\t\t\trequest:{\r\n\t\t\t\tmethod:\"POST\",\r\n\t\t\t\tmode:\"cors\",\r\n\t\t\t\theaders:{\"Content-type\":\"application/json\"},\r\n\t\t\t\tbody:JSON.stringify(user)\r\n\t\t\t},\r\n\t\t\taction:\"login\"\r\n\t\t})\r\n\t}\r\n\r\n\tconst logout = (token) => {\r\n\t\tsetState({\r\n\t\t\turl:\"/logout\",\r\n\t\t\trequest:{\r\n\t\t\t\tmethod:\"POST\",\r\n\t\t\t\tmode:\"cors\",\r\n\t\t\t\theaders:{\"Content-type\":\"application/json\",\r\n\t\t\t\ttoken:token},\r\n\t\t\t},\r\n\t\t\taction:\"logout\"\r\n\t\t})\r\n\t}\r\n\r\n\tconst getList = (token) => {\r\n\t\tsetState({\r\n\t\t\turl:\"/api/shopping\",\r\n\t\t\trequest:{\r\n\t\t\t\tmethod:\"GET\",\r\n\t\t\t\tmode:\"cors\",\r\n\t\t\t\theaders:{\"Content-type\":\"application/json\",\r\n\t\t\t\ttoken:token},\r\n\t\t\t},\r\n\t\t\taction:\"getlist\"\r\n\t\t})\r\n\t}\r\n\t\r\n\tconst addItem = (token,item) => {\r\n\t\tsetState({\r\n\t\t\turl:\"/api/shopping\",\r\n\t\t\trequest:{\r\n\t\t\t\tmethod:\"POST\",\r\n\t\t\t\tmode:\"cors\",\r\n\t\t\t\theaders:{\"Content-type\":\"application/json\",\r\n\t\t\t\ttoken:token},\r\n\t\t\t\tbody:JSON.stringify(item)\r\n\t\t\t},\r\n\t\t\taction:\"additem\"\r\n\t\t})\r\n\t}\r\n\r\n\tconst removeItem = (token,id) => {\r\n\t\tsetState({\r\n\t\t\turl:\"/api/shopping/\"+id,\r\n\t\t\trequest:{\r\n\t\t\t\tmethod:\"DELETE\",\r\n\t\t\t\tmode:\"cors\",\r\n\t\t\t\theaders:{\"Content-type\":\"application/json\",\r\n\t\t\t\ttoken:token},\r\n\t\t\t},\r\n\t\t\taction:\"removeitem\"\r\n\t\t})\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tregister,\r\n\t\tlogin,\r\n\t\tlogout,\r\n\t\tgetList,\r\n\t\taddItem,\r\n\t\tremoveItem\r\n\t}\r\n}\r\n\r\nexport default useAction;"]},"metadata":{},"sourceType":"module"}