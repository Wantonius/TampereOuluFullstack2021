{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport LocaleContext, { localizations } from \"./LocaleContext\";\n\nvar LocaleProvider = function LocaleProvider(props) {\n  var _useState = useState({\n    locale: localizations.en\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      locale = _useState2[0],\n      setLocale = _useState2[1];\n\n  var changeLocale = function changeLocale(locale) {\n    if (locale === \"en\") {\n      setLocale({\n        locale: localizations.en\n      });\n    }\n\n    if (locale === \"fi\") {\n      setLocale({\n        locale: localizations.fi\n      });\n    }\n  };\n\n  return React.createElement(LocaleContext.Provider, {\n    value: {\n      strings: locale.locale,\n      changeLocale: changeLocale\n    }\n  }, props.children);\n};\n\nexport default LocaleProvider;","map":{"version":3,"sources":["C:/gits/tampereoulufullstack2021/TampereOuluFullstack2021/react_native/09_context_with_hooks/context/LocaleProvider.js"],"names":["React","useState","LocaleContext","localizations","LocaleProvider","props","locale","en","setLocale","changeLocale","fi","strings","children"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,aAAP,IAAsBC,aAAtB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAEjC,kBAA2BJ,QAAQ,CAAC;AACnCK,IAAAA,MAAM,EAACH,aAAa,CAACI;AADc,GAAD,CAAnC;AAAA;AAAA,MAAOD,MAAP;AAAA,MAAcE,SAAd;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,MAAD,EAAY;AAChC,QAAGA,MAAM,KAAK,IAAd,EAAoB;AACnBE,MAAAA,SAAS,CAAC;AACTF,QAAAA,MAAM,EAACH,aAAa,CAACI;AADZ,OAAD,CAAT;AAGA;;AACD,QAAGD,MAAM,KAAK,IAAd,EAAoB;AACnBE,MAAAA,SAAS,CAAC;AACTF,QAAAA,MAAM,EAACH,aAAa,CAACO;AADZ,OAAD,CAAT;AAGA;AACD,GAXD;;AAYA,SACC,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC9BC,MAAAA,OAAO,EAACL,MAAM,CAACA,MADe;AAE9BG,MAAAA,YAAY,EAACA;AAFiB;AAA/B,KAICJ,KAAK,CAACO,QAJP,CADD;AAQA,CA1BD;;AA4BA,eAAeR,cAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport LocaleContext,{localizations} from './LocaleContext';\r\n\r\nconst LocaleProvider = (props) => {\r\n\t\r\n\tconst [locale,setLocale] = useState({\r\n\t\tlocale:localizations.en\r\n\t})\r\n\t\r\n\tconst changeLocale = (locale) => {\r\n\t\tif(locale === \"en\") {\r\n\t\t\tsetLocale({\r\n\t\t\t\tlocale:localizations.en\r\n\t\t\t})\r\n\t\t}\r\n\t\tif(locale === \"fi\") {\r\n\t\t\tsetLocale({\r\n\t\t\t\tlocale:localizations.fi\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\treturn(\r\n\t\t<LocaleContext.Provider value={{\r\n\t\t\tstrings:locale.locale,\r\n\t\t\tchangeLocale:changeLocale\r\n\t\t}}>\r\n\t\t{props.children}\r\n\t\t</LocaleContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default LocaleProvider;"]},"metadata":{},"sourceType":"module"}